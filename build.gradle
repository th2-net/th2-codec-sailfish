/*
 *  Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
    }

    ext {
        kotlin_version = "1.6.21"
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id "org.owasp.dependencycheck" version "8.1.0"
}

ext {
    genDir             = file('src/gen')
    sailfishVersion    = '3.3.54'
}

group 'com.exactpro.th2'
version release_version

ext.excludeSailfish = { rcd ->
    rcd.excludeModule("com.exactpro.sf", "sailfish-core")
    rcd.excludeModule("com.exactpro.sf", "sailfish-common")
    rcd.excludeModule("com.exactpro.sf", "sailfish-rest-api-client")
    rcd.excludeModule("com.exactpro.sf", "service-http")
}

repositories {
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        content {
            excludeSailfish(it)
        }
    }

    // ignoreGradleMetadataRedirection is used for sonatype because
    // Sailfish dependencies have constrains that interfere with our BOM
    // so we exclude Gradle metadata for this repositories.
    // We've checked these versions - they are compatible and safe to use
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        content {
            excludeSailfish(it)
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral()
    mavenLocal()

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }
    }
}


dependencies {
    api platform('com.exactpro.th2:bom:4.2.0')
    implementation 'com.exactpro.th2:common:3.44.1'
    implementation ('com.exactpro.th2:sailfish-utils:3.14.0') {
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-yaml' // because of the vulnerability
        exclude group: 'junit', module: 'junit' // because of the vulnerability
    }

    implementation 'io.github.microutils:kotlin-logging:2.0.11'

    implementation 'org.slf4j:slf4j-api'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'

    implementation("com.github.ajalt:clikt:2.7.0")

    implementation 'com.google.protobuf:protobuf-java-util'

    implementation ("com.exactpro.sf:sailfish-core:${sailfishVersion}") {
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-yaml' // because of the vulnerability
        exclude group: 'junit', module: 'junit' // because of the vulnerability
        exclude group: 'com.exactpro.mina', module: 'apache-mina-core' // because of the vulnerability
    }

    testImplementation 'org.mockito:mockito-inline:3.5.6'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

application {
    mainClassName = "com.exactpro.th2.codec.MainKt"
}

dependencyCheck {
    formats=['SARIF', 'JSON', 'HTML']
    failBuildOnCVSS=5

    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}
