/*
 *  Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
    }

    ext {
        kotlin_version = "1.6.21"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id "org.owasp.dependencycheck" version "7.3.0"
}

dependencyCheck {
    format='HTML'
    failBuildOnCVSS=5
}

ext {
    genDir             = file('src/gen')
    sharedDir          = file("${project.rootDir}/shared")
    sailfishVersion    = '3.3.11'
}

ext.excludeSailfish = { rcd ->
    rcd.excludeModule("com.exactpro.sf", "sailfish-core")
    rcd.excludeModule("com.exactpro.sf", "sailfish-common")
    rcd.excludeModule("com.exactpro.sf", "sailfish-rest-api-client")
    rcd.excludeModule("com.exactpro.sf", "service-http")
}

group 'com.exactpro.th2'
version release_version

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }

    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        content {
            excludeSailfish(it)
        }
    }
    // ignoreGradleMetadataRedirection is used for sonatype because
    // Sailfish dependencies have constrains that interfere with our BOM
    // so we exclude Gradle metadata for this repositories.
    // We've checked these versions - they are compatible and safe to use
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        content {
            excludeSailfish(it)
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral()
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}


dependencies {
    api platform('com.exactpro.th2:bom:4.0.2')
    implementation 'com.exactpro.th2:common:3.41.1'
    implementation 'com.exactpro.th2:sailfish-utils:3.13.0'

    implementation 'io.github.microutils:kotlin-logging:2.1.23'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'com.github.ajalt.clikt:clikt:3.5.0'

    implementation 'com.google.protobuf:protobuf-java-util'

    testImplementation('org.apache.logging.log4j:log4j-slf4j2-impl') {
        because('logging in testing')
    }
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

applicationName = 'service'

distTar {
    archiveFileName.set("${applicationName}.tar")
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

application {
    mainClass.set("com.exactpro.th2.codec.MainKt")
}
